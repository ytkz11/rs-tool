# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'black_edge_removal.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from qfluentwidgets import CardWidget, LineEdit, PrimaryPushButton, PushButton, TitleLabel, ProgressBar, SpinBox

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(834, 549)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.CardWidget = CardWidget(Form)
        self.CardWidget.setObjectName("CardWidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.CardWidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        # Title Frame
        self.frame = QtWidgets.QFrame(self.CardWidget)
        self.frame.setMinimumSize(QtCore.QSize(0, 40))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.TitleLabel_3 = TitleLabel(self.frame)
        self.TitleLabel_3.setAlignment(QtCore.Qt.AlignCenter)
        self.TitleLabel_3.setObjectName("TitleLabel_3")
        self.verticalLayout_3.addWidget(self.TitleLabel_3)
        self.verticalLayout_2.addWidget(self.frame)

        # Main Content Frame
        self.frame_2 = QtWidgets.QFrame(self.CardWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setContentsMargins(-1, 10, 0, -1)
        self.verticalLayout_5.setObjectName("verticalLayout_5")

        # Input File Path
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(10, 10, 10, 10)
        self.horizontalLayout.setSpacing(20)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.input_filepath_line = LineEdit(self.frame_2)
        self.input_filepath_line.setMinimumSize(QtCore.QSize(500, 40))
        self.input_filepath_line.setPlaceholderText("选择输入影像文件")
        self.input_filepath_line.setObjectName("input_filepath_line")
        self.horizontalLayout.addWidget(self.input_filepath_line)
        self.input_filepath_btn = PrimaryPushButton(self.frame_2)
        self.input_filepath_btn.setMinimumSize(QtCore.QSize(0, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.input_filepath_btn.setFont(font)
        self.input_filepath_btn.setStyleSheet(self.getButtonStyleSheet())
        self.input_filepath_btn.setObjectName("input_filepath_btn")
        self.horizontalLayout.addWidget(self.input_filepath_btn)

        self.verticalLayout_5.addLayout(self.horizontalLayout)

        # Output File Path
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(10, 10, 10, 10)
        self.horizontalLayout_2.setSpacing(20)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.output_filepath_line = LineEdit(self.frame_2)
        self.output_filepath_line.setMinimumSize(QtCore.QSize(500, 40))
        self.output_filepath_line.setPlaceholderText("选择输出影像文件路径")
        self.output_filepath_line.setObjectName("output_filepath_line")
        self.horizontalLayout_2.addWidget(self.output_filepath_line)
        # self.output_filepath_btn = PrimaryPushButton(self.frame_2)
        # self.output_filepath_btn.setMinimumSize(QtCore.QSize(0, 40))
        # self.output_filepath_btn.setFont(font)
        # self.output_filepath_btn.setStyleSheet(self.getButtonStyleSheet())
        # self.output_filepath_btn.setObjectName("output_filepath_btn")
        # self.horizontalLayout_2.addWidget(self.output_filepath_btn)

        self.verticalLayout_5.addLayout(self.horizontalLayout_2)

        # Block Size and Edge Width
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(10, 10, 10, 10)
        self.horizontalLayout_3.setSpacing(20)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.block_size_spinbox = SpinBox(self.frame_2)
        self.block_size_spinbox.setMinimumSize(QtCore.QSize(200, 40))
        self.block_size_spinbox.setRange(500, 10000)
        self.block_size_spinbox.setValue(1000)
        self.block_size_spinbox.setPrefix("分块尺寸: ")
        self.block_size_spinbox.setObjectName("block_size_spinbox")
        self.horizontalLayout_3.addWidget(self.block_size_spinbox)
        self.edge_width_spinbox = SpinBox(self.frame_2)
        self.edge_width_spinbox.setMinimumSize(QtCore.QSize(200, 40))
        self.edge_width_spinbox.setRange(10, 500)
        self.edge_width_spinbox.setValue(500)
        self.edge_width_spinbox.setPrefix("边缘宽度: ")
        self.edge_width_spinbox.setObjectName("edge_width_spinbox")
        self.horizontalLayout_3.addWidget(self.edge_width_spinbox)

        self.verticalLayout_5.addLayout(self.horizontalLayout_3)

        # Process Button
        self.process_btn = PrimaryPushButton(self.frame_2)
        self.process_btn.setMinimumSize(QtCore.QSize(0, 40))
        self.process_btn.setFont(font)
        self.process_btn.setStyleSheet(self.getButtonStyleSheet())
        self.process_btn.setObjectName("process_btn")
        self.verticalLayout_5.addWidget(self.process_btn)

        # Progress Bar
        self.progressBar = ProgressBar(self.frame_2)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.verticalLayout_5.addWidget(self.progressBar)

        # Spacer to push content up
        spacerItem = QtWidgets.QSpacerItem(20, 100, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem)

        self.verticalLayout_6.addLayout(self.verticalLayout_5)
        self.verticalLayout_2.addWidget(self.frame_2)
        self.verticalLayout.addWidget(self.CardWidget)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.TitleLabel_3.setText(_translate("Form", "黑边去除"))
        self.input_filepath_btn.setText(_translate("Form", "浏览"))
        # self.output_filepath_btn.setText(_translate("Form", "浏览"))
        self.process_btn.setText(_translate("Form", "开始处理"))

    def getButtonStyleSheet(self):
        return """
PushButton, ToolButton, ToggleButton, ToggleToolButton {
    color: black;
    background: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(0, 0, 0, 0.073);
    border-bottom: 1px solid rgba(0, 0, 0, 0.183);
    border-radius: 20px;
    padding: 5px 12px 6px 12px;
    outline: none;
}

ToolButton {
    padding: 5px 9px 6px 8px;
}

PushButton[hasIcon=false] {
    padding: 5px 12px 6px 12px;
}

PushButton[hasIcon=true] {
    padding: 5px 12px 6px 36px;
}

DropDownToolButton, PrimaryDropDownToolButton {
    padding: 5px 31px 6px 8px;
}

DropDownPushButton[hasIcon=false],
PrimaryDropDownPushButton[hasIcon=false] {
    padding: 5px 31px 6px 12px;
}

DropDownPushButton[hasIcon=true],
PrimaryDropDownPushButton[hasIcon=true] {
    padding: 5px 31px 6px 36px;
}

PushButton:hover, ToolButton:hover, ToggleButton:hover, ToggleToolButton:hover {
    background: rgba(249, 249, 249, 0.5);
}

PushButton:pressed, ToolButton:pressed, ToggleButton:pressed, ToggleToolButton:pressed {
    color: rgba(0, 0, 0, 0.63);
    background: rgba(249, 249, 249, 0.3);
    border-bottom: 1px solid rgba(0, 0, 0, 0.073);
}

PushButton:disabled, ToolButton:disabled, ToggleButton:disabled, ToggleToolButton:disabled {
    color: rgba(0, 0, 0, 0.36);
    background: rgba(249, 249, 249, 0.3);
    border: 1px solid rgba(0, 0, 0, 0.06);
    border-bottom: 1px solid rgba(0, 0, 0, 0.06);
}

PrimaryPushButton,
PrimaryToolButton,
ToggleButton:checked,
ToggleToolButton:checked {
    color: white;
    background-color: #009faa;
    border: 1px solid #00a7b3;
    border-bottom: 1px solid #007780;
}

PrimaryPushButton:hover,
PrimaryToolButton:hover,
ToggleButton:checked:hover,
ToggleToolButton:checked:hover {
    background-color: #00a7b3;
    border: 1px solid #2daab3;
    border-bottom: 1px solid #007780;
}

PrimaryPushButton:pressed,
PrimaryToolButton:pressed,
ToggleButton:checked:pressed,
ToggleToolButton:checked:pressed {
    color: rgba(255, 255, 255, 0.63);
    background-color: #3eabb3;
    border: 1px solid #3eabb3;
}

PrimaryPushButton:disabled,
PrimaryToolButton:disabled,
ToggleButton:checked:disabled,
ToggleToolButton:checked:disabled {
    color: rgba(255, 255, 255, 0.9);
    background-color: rgb(205, 205, 205);
    border: 1px solid rgb(205, 205, 205);
}

SplitDropButton,
PrimarySplitDropButton {
    border-left: none;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

#splitPushButton,
#splitToolButton,
#primarySplitPushButton,
#primarySplitToolButton {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

#splitPushButton:pressed,
#splitToolButton:pressed,
SplitDropButton:pressed {
    border-bottom: 1px solid rgba(0, 0, 0, 0.183);
}

PrimarySplitDropButton:pressed {
    border-bottom: 1px solid #007780;
}

#primarySplitPushButton, #primarySplitToolButton {
    border-right: 1px solid #3eabb3;
}

#primarySplitPushButton:pressed, #primarySplitToolButton:pressed {
    border-bottom: 1px solid #007780;
}

HyperlinkButton {
    padding: 6px 12px 6px 12px;
    color: #009faa;
    border: none;
    border-radius: 6px;
    background-color: transparent;
}

HyperlinkButton[hasIcon=false] {
    padding: 6px 12px 6px 12px;
}

HyperlinkButton[hasIcon=true] {
    padding: 6px 12px 6px 36px;
}

HyperlinkButton:hover {
    color: #009faa;
    background-color: rgba(0, 0, 0, 10);
    border: none;
}

HyperlinkButton:pressed {
    color: #009faa;
    background-color: rgba(0, 0, 0, 6);
    border: none;
}

HyperlinkButton:disabled {
    color: rgba(0, 0, 0, 0.43);
    background-color: transparent;
    border: none;
}

RadioButton {
    min-height: 24px;
    max-height: 24px;
    background-color: transparent;
    font: 14px 'Segoe UI', 'Microsoft YaHei', 'PingFang SC';
    color: black;
}

RadioButton::indicator {
    width: 18px;
    height: 18px;
    border-radius: 11px;
    border: 2px solid #999999;
    background-color: rgba(0, 0, 0, 5);
    margin-right: 4px;
}

RadioButton::indicator:hover {
    background-color: rgba(0, 0, 0, 0);
}

RadioButton::indicator:pressed {
    border: 2px solid #bbbbbb;
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 rgb(225, 224, 223),
            stop:1 rgb(225, 224, 223));
}

RadioButton::indicator:checked {
    height: 22px;
    width: 22px;
    border: none;
    border-radius: 11px;
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 #009faa,
            stop:1 #009faa);
}

RadioButton::indicator:checked:hover {
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.6 rgb(255, 255, 255),
            stop:0.7 #009faa,
            stop:1 #009faa);
}

RadioButton::indicator:checked:pressed {
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 #009faa,
            stop:1 #009faa);
}

RadioButton:disabled {
    color: rgba(0, 0, 0, 110);
}

RadioButton::indicator:disabled {
    border: 2px solid #bbbbbb;
    background-color: transparent;
}

RadioButton::indicator:disabled:checked {
    border: none;
    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5,
            stop:0 rgb(255, 255, 255),
            stop:0.5 rgb(255, 255, 255),
            stop:0.6 rgba(0, 0, 0, 0.2169),
            stop:1 rgba(0, 0, 0, 0.2169));
}

TransparentToolButton,
TransparentToggleToolButton,
TransparentDropDownToolButton,
TransparentPushButton,
TransparentDropDownPushButton,
TransparentTogglePushButton {
    background-color: transparent;
    border: none;
    border-radius: 5px;
    margin: 0;
}

TransparentToolButton:hover,
TransparentToggleToolButton:hover,
TransparentDropDownToolButton:hover,
TransparentPushButton:hover,
TransparentDropDownPushButton:hover,
TransparentTogglePushButton:hover {
    background-color: rgba(0, 0, 0, 9);
    border: none;
}

TransparentToolButton:pressed,
TransparentToggleToolButton:pressed,
TransparentDropDownToolButton:pressed,
TransparentPushButton:pressed,
TransparentDropDownPushButton:pressed,
TransparentTogglePushButton:pressed {
    background-color: rgba(0, 0, 0, 6);
    border: none;
}

TransparentToolButton:disabled,
TransparentToggleToolButton:disabled,
TransparentDropDownToolButton:disabled,
TransprentPushButton:disabled,
TransparentDropDownPushButton:disabled,
TransprentTogglePushButton:disabled {
    background-color: transparent;
    border: none;
}

PillPushButton,
PillPushButton:hover,
PillPushButton:pressed,
PillPushButton:disabled,
PillPushButton:checked,
PillPushButton:checked:hover,
PillPushButton:checked:pressed,
PillPushButton:disabled:checked,
PillToolButton,
PillToolButton:hover,
PillToolButton:pressed,
PillToolButton:disabled,
PillToolButton:checked,
PillToolButton:checked:hover,
PillToolButton:checked:pressed,
PillToolButton:disabled:checked {
    background-color: transparent;
    border: none;
}
"""

if __name__ == '__main__':
    from PyQt5.QtWidgets import QApplication, QMainWindow
    import sys

    class MainWindow(QMainWindow):
        def __init__(self):
            super().__init__()
            self.ui = Ui_Form()
            self.ui.setupUi(self)
            self.setWindowTitle("黑边去除工具")

            # Connect buttons to their respective functions
            self.ui.input_filepath_btn.clicked.connect(self.select_input_file)
            # self.ui.output_filepath_btn.clicked.connect(self.select_output_file)
            self.ui.process_btn.clicked.connect(self.process_image)

        def select_input_file(self):
            from PyQt5.QtWidgets import QFileDialog
            file_path, _ = QFileDialog.getOpenFileName(self, "选择输入影像文件", "", "图像文件 (*.png *.jpg *.jpeg *.bmp)")
            if file_path:
                self.ui.input_filepath_line.setText(file_path)

        def select_output_file(self):
            from PyQt5.QtWidgets import QFileDialog
            file_path, _ = QFileDialog.getSaveFileName(self, "选择输出影像文件路径", "", "图像文件 (*.png *.jpg *.jpeg *.bmp)")
            if file_path:
                self.ui.output_filepath_line.setText(file_path)

        def process_image(self):
            input_path = self.ui.input_filepath_line.text()
            output_path = self.ui.output_filepath_line.text()
            block_size = self.ui.block_size_spinbox.value()
            edge_width = self.ui.edge_width_spinbox.value()

            if not input_path or not output_path:
                print("请选择输入和输出文件路径")
                return

            # Placeholder for the actual image processing logic
            print(f"处理图像: 输入路径={input_path}, 输出路径={output_path}, 分块尺寸={block_size}, 边缘宽度={edge_width}")
            # Simulate progress
            for i in range(101):
                self.ui.progressBar.setValue(i)
                QtWidgets.QApplication.processEvents()
                # Simulate some processing time
                import time
                time.sleep(0.05)

            print("处理完成")

    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
